{"version":3,"sources":["components/Form/Form.module.css","components/Section/Section.module.css","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selection.js","redux/services/contacts-api.js","redux/contacts/contactsOperations.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/ContactsListItem/ContactsListItem.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","saveContactRequest","saveContactSuccess","saveContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateFilterAction","itemsReduser","createReducer","actions","state","action","payload","filter","contact","id","isLoadingReduser","errorReduser","_","filterReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","devTools","process","Section","title","children","className","styles","section","getFilterReducer","getItems","getVisibleContacts","createSelector","items","name","toLowerCase","includes","a","axios","get","data","defaults","baseURL","fetchContacts","addContact","post","deleteContact","delete","dispatch","contactsActions","api","number","contactToSave","useForm","key","useState","Form","setName","setNumber","useSelector","useDispatch","handleChange","evt","target","value","reset","form","onSubmit","preventDefault","find","alert","contactsOperations","label","input","type","pattern","required","onChange","ContactsList","ContactsListItem","visibleContacts","contactsSelection","useEffect","map","listItem","button","onClick","onDeleteButtonClick","Filter","e","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1d88f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1vr25\",\"label\":\"Form_label__LCf6v\",\"input\":\"Form_input__1DtDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2wYM6\",\"section\":\"Section_section__zVoWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactsListItem_listItem__1lJl6\",\"button\":\"ContactsListItem_button__2a0fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1HLRT\",\"input\":\"Filter_input__2_4J1\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst saveContactRequest = createAction(\"contacts/saveContactRequest\");\r\nconst saveContactSuccess = createAction(\"contacts/saveContactSuccess\");\r\nconst saveContactError = createAction(\"contacts/saveContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nconst updateFilterAction = createAction(\"updateFilter\");\r\n\r\nexport default {\r\n  saveContactRequest,\r\n  saveContactSuccess,\r\n  saveContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  updateFilterAction,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst itemsReduser = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n  [actions.deleteContactSuccess]: (state, action) => {\r\n    return state.filter((contact) => contact.id !== action.payload);\r\n  },\r\n  [actions.saveContactSuccess]: (state, action) => {\r\n    return [...state, action.payload];\r\n  },\r\n});\r\n\r\nconst isLoadingReduser = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n\r\n  [actions.saveContactRequest]: () => true,\r\n  [actions.saveContactSuccess]: () => false,\r\n  [actions.saveContactError]: () => false,\r\n});\r\n\r\nconst errorReduser = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, action) => action.payload,\r\n  [actions.fetchContactsRequest]: () => null,\r\n\r\n  [actions.deleteContactError]: (_, action) => action.payload,\r\n  [actions.deleteContactRequest]: () => null,\r\n\r\n  [actions.saveContactError]: (_, action) => action.payload,\r\n  [actions.saveContactRequest]: () => null,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.updateFilterAction]: (_, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({\r\n  itemsReduser,\r\n  isLoadingReduser,\r\n  errorReduser,\r\n  filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nimport reducer from \"./contacts/contacts-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilterReducer = (state) => state.contacts.filterReducer;\r\n\r\nexport const getItems = (state) => state.contacts.itemsReduser;\r\n\r\n// export const getVisibleContacts = (state) =>\r\n//   getItems(state).filter((contact) =>\r\n//     contact.name.toLowerCase().includes(getFilterReducer(state).toLowerCase())\r\n//   );\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getFilterReducer, getItems],\r\n  (filter, items) =>\r\n    items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:3004\";\r\n\r\nasync function fetchContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nfunction addContact(contact) {\r\n  return axios.post(\"/contacts\", contact);\r\n}\r\n\r\nfunction deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","// import shortid from \"shortid\";\r\n\r\nimport contactsActions from \"./contacts-actions\";\r\nimport api from \"../services/contacts-api\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  try {\r\n    const contacts = await api.fetchContacts();\r\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(contactsActions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = (id) => async (dispatch) => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n  try {\r\n    const deleteContact = await api.deleteContact(id);\r\n    // console.log(deleteContact);\r\n    dispatch(contactsActions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(contactsActions.deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst saveContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    // id: shortid.generate(),\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(contactsActions.saveContactRequest(contact));\r\n  try {\r\n    const contactToSave = await api.addContact(contact);\r\n    dispatch(contactsActions.saveContactSuccess(contactToSave.data));\r\n  } catch (error) {\r\n    dispatch(contactsActions.saveContactError(error));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, deleteContact, saveContact };\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Form.module.css\";\r\nimport { getItems } from \"redux/contacts/contacts-selection\";\r\nimport contactsOperations from \"redux/contacts/contactsOperations\";\r\n\r\nconst useForm = (key) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  return [state, setState];\r\n};\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useForm(\"name\");\r\n  const [number, setNumber] = useForm(\"number\");\r\n  const contacts = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (contacts.find((contact) => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.saveContact(name, number));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Nuber\r\n          <input\r\n            className={styles.input}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","const ContactsList = ({ children }) => {\r\n  return <ul>{children}</ul>;\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./ContactsListItem.module.css\";\r\n// import {\r\n//   // getItems,\r\n//   getVisibleContacts,\r\n// } from \"redux/contacts/contacts-selection\";\r\n// import contactsOperations from \"redux/contacts/contactsOperations\";\r\n\r\nimport { contactsSelection, contactsOperations } from \"redux/contacts\";\r\nconst ContactsListItem = () => {\r\n  const visibleContacts = useSelector(contactsSelection.getVisibleContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const items = useSelector(getItems);\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n  const onDeleteButtonClick = (id) =>\r\n    dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    // items.length &&\r\n    visibleContacts.map(({ id, name, number }) => (\r\n      <li className={styles.listItem} key={id}>\r\n        {name}:{number}\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => onDeleteButtonClick(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n// import contactsActions from \"redux/contacts/contacts-actions\";\r\n// import { getFilterReducer } from \"redux/contacts/contacts-selection\";\r\nimport { contactsActions, contactsSelection } from \"redux/contacts\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(contactsSelection.getFilterReducer);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) =>\r\n    dispatch(contactsActions.updateFilterAction(e.target.value));\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input className={styles.input} value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nimport Section from \"./components/Section\";\r\nimport Form from \"./components/Form\";\r\nimport ContactsList from \"./components/ContactsList\";\r\nimport ContactsListItem from \"./components/ContactsListItem\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <Form />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactsList>\r\n          <ContactsListItem />\r\n        </ContactsList>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport store from \"./redux/store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Provider store={store.store}> */}\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n    {/* </Provider> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}